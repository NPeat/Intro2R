---
title: "Load/ingest data"
---

The [Tidyverse](https://tidyveres.org) is a set of packages that work together within a common tidy-data framework. These packages modernize R and enable an efficient workflow. This tidy framework is great for learning while being productive.

```{r tidyverseimage}
#| echo: false
#| eval: false
#| cap-location: bottom
#| fig.cap: "Image Credit:  RStudio.com"
knitr::include_graphics("https://rviews.rstudio.com/post/2017-06-09-What-is-the-tidyverse_files/tidyverse1.png")

```

::: {layout="[60,-40]"}
![Tidyverse packages by Posit/RStudio.com](https://rviews.rstudio.com/post/2017-06-09-What-is-the-tidyverse_files/tidyverse1.png)
:::

<!-- Image Credit: https://rviews.rstudio.com/post/2017-06-09-What-is-the-tidyverse_files/tidyverse1.png -->

## Load library Packages:

```{r load-packages, message=FALSE, warning=FALSE}
library(tidyverse)
```

> Note: You must install a library-package before you load a library-package. The above code chunk engages the `library()` function to load the "*tidyverse*" packages. ([Video Help: Install Pages](https://tutorials.shinyapps.io/00-setup/#section-install-packages))

As you see from the image above, the *tidyverse* package is a super-package consisting of several more precise and focused packages. You can install packages from the **Tools** menu-bar in the RStudio IDE.

## Load Custom Data  

Outside of this workshop, you'll likely want to load your own data. R and RStudio support many methods of gathering and importing data. Two common data import methods include importing data from the local file system or via a URL.

RStudio has an on-board data loading wizard which leverages the `readr()` package for data loading. There are several ways to engage this import function:

-   `File > Import Dataset`
-   Or, via the *Import Dataset* "button" found in the *Environment* Pane.

![RStudio Environment Pane](images/import_data.png "Environment Pane")

Using the Import wizard, you can generate (and execute) the code necessary to read in the `cars.csv` file.

```{r load-data, message=FALSE, warning=FALSE}
# readr::read_csv
# 'read_csv()' is part of the tidyverse 'readr' package.  

cars <- read_csv("data/cars.csv")
```

'reader::read_csv()' helpfully overrides default behavior of the "base R" `read.csv()` function. For example `read_csv()` does not automatically convert strings as factors. You can read more about `readr` http://readr.tidyverse.org/

## Workshop Data Set  

During Rfun workshops, We often use the *`Starwars` characters* dataset. The data, part of the `dplyr` package, come from SWAPI, the Star Wars API, http://swapi.co/. Since the data are integrated into `dplyr`, we don't need to load the data, but you may still want to find information about the dataset. The codebood for the Starwars dataset is integrated into the `dplyr` documentation. To view the *Starwars* codebook, first load the `library(dplyr)` package. Then, via the *Help* pane, search *starwars*. Alternatively, in the *Console* pane, type `?starwars`.

The Data Wrangling module covers `dplyr` in greater detail.

## View your data in a grid  

```{r}
#| eval: false
starwars
```

```{r}
#| echo: false
# starwars
rmarkdown::paged_table(starwars)
```

## Modern Data Frames: Tibbles  

A tibble (tbl) is a "Table as data frame", a modern tidyverse table.

```{r Table-dataframe}
class(starwars) 
```

## Data Structure  

### Most Common Data Structures  

-   Vector
-   Data Frame & Tibble
-   List
-   Matrix

Read more about it in [R for Data Science](https://r4ds.had.co.nz/vectors.html)

### Glimpse into a data frame  

First, let's glimpse into a Tibble. How do you know the object is a Tibble? Read below about `class()`, but first ...

`glimpse()` reveals the structure of an object

```{r}
glimpse(starwars)
```

## Data Type  

### Most Common Data Types  

-   character

-   numeric

    -   integer (e.g. `30L`, `as.integer(30)`)
    -   double (approximation with floating points and multiple special values)

-   logical (True or False)

-   factor ([`forcats`](https://forcats.tidyverse.org/) is especially used for for manipulating factor data)

### Class  

`class()` identifies the class of an object revealing the data structure or the data type.

```{r}
class(starwars)
```

You can reference a vector within a dataframe via the `my_df$<<column_name>>` syntax.
